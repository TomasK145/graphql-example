// <auto-generated />
using System;
using GraphQL.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GraphQL.Api.Migrations
{
    [DbContext(typeof(LibraryDbContext))]
    partial class LibraryDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GraphQL.Api.Data.Entities.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City");

                    b.Property<string>("Country");

                    b.Property<string>("PostCode");

                    b.Property<string>("Street");

                    b.Property<string>("StreetNumber");

                    b.HasKey("Id");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("GraphQL.Api.Data.Entities.Author", b =>
                {
                    b.Property<int>("AuthorId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AddressId");

                    b.Property<string>("Name");

                    b.Property<string>("Surname");

                    b.HasKey("AuthorId");

                    b.HasIndex("AddressId");

                    b.ToTable("Authors");
                });

            modelBuilder.Entity("GraphQL.Api.Data.Entities.AuthorBook", b =>
                {
                    b.Property<int>("AuthorId");

                    b.Property<int>("BookId");

                    b.HasKey("AuthorId", "BookId");

                    b.HasIndex("BookId");

                    b.ToTable("AuthorBook");
                });

            modelBuilder.Entity("GraphQL.Api.Data.Entities.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BookStatus");

                    b.Property<int?>("CustomerId");

                    b.Property<int>("Genre");

                    b.Property<int>("PageCount");

                    b.Property<string>("Title");

                    b.HasKey("BookId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("GraphQL.Api.Data.Entities.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AuthorId");

                    b.Property<int>("ContactType");

                    b.Property<int?>("CustomerId");

                    b.Property<string>("Description");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Contact");
                });

            modelBuilder.Entity("GraphQL.Api.Data.Entities.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AddressId");

                    b.Property<string>("Name");

                    b.Property<string>("Surname");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("GraphQL.Api.Data.Entities.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BookId");

                    b.Property<int>("Rating");

                    b.Property<int>("ReviewAuthorId");

                    b.Property<string>("ReviewMessage");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("ReviewAuthorId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("GraphQL.Api.Data.Entities.Author", b =>
                {
                    b.HasOne("GraphQL.Api.Data.Entities.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId");
                });

            modelBuilder.Entity("GraphQL.Api.Data.Entities.AuthorBook", b =>
                {
                    b.HasOne("GraphQL.Api.Data.Entities.Author", "Author")
                        .WithMany("CreatedBooks")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GraphQL.Api.Data.Entities.Book", "Book")
                        .WithMany("Authors")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GraphQL.Api.Data.Entities.Book", b =>
                {
                    b.HasOne("GraphQL.Api.Data.Entities.Customer")
                        .WithMany("BorrowedBooks")
                        .HasForeignKey("CustomerId");
                });

            modelBuilder.Entity("GraphQL.Api.Data.Entities.Contact", b =>
                {
                    b.HasOne("GraphQL.Api.Data.Entities.Author")
                        .WithMany("Contacts")
                        .HasForeignKey("AuthorId");

                    b.HasOne("GraphQL.Api.Data.Entities.Customer")
                        .WithMany("Contacts")
                        .HasForeignKey("CustomerId");
                });

            modelBuilder.Entity("GraphQL.Api.Data.Entities.Customer", b =>
                {
                    b.HasOne("GraphQL.Api.Data.Entities.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId");
                });

            modelBuilder.Entity("GraphQL.Api.Data.Entities.Review", b =>
                {
                    b.HasOne("GraphQL.Api.Data.Entities.Book", "Book")
                        .WithMany("Reviews")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GraphQL.Api.Data.Entities.Customer", "ReviewAuthor")
                        .WithMany("Reviews")
                        .HasForeignKey("ReviewAuthorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
